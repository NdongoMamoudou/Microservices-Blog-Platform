# Ingress pour le service client
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: client-service-ingress
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  ingressClassName: nginx
  rules:
  - host: localhost
    http:
      paths:
      - path: /?(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: client-srv
            port:
              number: 3000

---
# Ingress pour le service comments
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: comments-service-ingress
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  ingressClassName: nginx
  rules:
  - host: localhost
    http:
      paths:
      - path: /posts/?(.*)/comments
        pathType: Prefix
        backend:
          service:
            name: comments-srv
            port:
              number: 4001

---
# Ingress pour le service posts
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: posts-clusterip-service-ingress
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  ingressClassName: nginx
  rules:
  - host: localhost
    http:
      paths:
      - path: /posts/create
        pathType: Prefix
        backend:
          service:
            name: posts-clusterip-srv
            port:
              number: 4000

---
# Ingress pour le service query
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: query-service-ingress
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  ingressClassName: nginx
  rules:
  - host: localhost
    http:
      paths:
      - path: /posts
        pathType: Prefix
        backend:
          service:
            name: query-srv
            port:
              number: 4002
